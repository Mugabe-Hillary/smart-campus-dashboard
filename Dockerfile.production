FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy all application files first
COPY . .

# Install Python dependencies with robust fallback strategy
RUN pip install --upgrade pip setuptools wheel && \
    if [ -f "requirements-modular.txt" ]; then \
    echo "Installing from requirements-modular.txt" && \
    pip install --no-cache-dir -r requirements-modular.txt; \
    elif [ -f "requirements.txt" ]; then \
    echo "Installing from requirements.txt" && \
    pip install --no-cache-dir -r requirements.txt; \
    else \
    echo "Installing core dependencies directly" && \
    pip install --no-cache-dir \
    "streamlit>=1.28.1" \
    "pandas>=2.1.0" \
    "plotly>=5.17.0" \
    "influxdb-client>=1.38.0" \
    "numpy>=1.25.0" \
    "pytz>=2023.3" \
    "requests>=2.31.0" \
    "altair>=5.1.2" \
    "psutil>=5.9.5" \
    "python-dotenv>=1.0.0" \
    "typing-extensions>=4.7.0" \
    "streamlit-autorefresh==0.0.1"; \
    fi

# Create necessary directories
RUN mkdir -p logs data && \
    chmod 755 logs data

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Expose port
EXPOSE 8501

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl --fail http://localhost:8501/_stcore/health || exit 1

# Run the application
CMD ["streamlit", "run", "dashboard.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.headless=true", "--server.enableCORS=false"]
